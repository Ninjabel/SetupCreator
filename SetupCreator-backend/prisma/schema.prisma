generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  email         String  @unique
  password      String
  role          Role    @default(USER)
  setups        Setup[]
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId], name: "idx_refresh_token_user")
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]
}

model Setup {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  user       User      @relation(fields: [userId], references: [id])
  userId     String    @map("userId") @db.ObjectId
  products   Product[] @relation(fields: [productIds], references: [id])
  productIds String[]  @db.ObjectId
}

model Product {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @map("categoryId") @db.ObjectId
  setups     Setup[]   @relation(fields: [setupIds], references: [id])
  setupIds   String[]  @db.ObjectId
  ceneoId    String?
  photoUrl   String?
  price      Int?
  shopUrl    String?
  shopImage  String?
  isPromoted Boolean?  @default(false)
}

enum Role {
  USER
  ADMIN
}